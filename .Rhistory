knitr::opts_chunk$set(echo = TRUE)
install.packages("BiocManager")
BiocManager::install()
```{r}
install.packages("BiocManager")
BiocManager::install()
knitr::opts_chunk$set(echo = TRUE)
BiocManager::install()
BiocManager::install("DESeq2")
n
knitr::opts_chunk$set(echo = TRUE)
library(BiocManager)
library(DESeq2)
metadata <-  read.csv("data/airway_metadata.csv", stringsAsFactors = FALSE)
counts <- read.csv("data/airway_scaledcounts.csv", stringsAsFactors = FALSE)
counts <- read.csv("airway_scaledcounts.csv", stringsAsFactors = FALSE)
knitr::opts_chunk$set(echo = TRUE)
counts <- read.csv("airway_scaledcounts.csv", stringsAsFactors = FALSE)
metadata <-  read.csv("airway_metadata.csv", stringsAsFactors = FALSE)
View(counts)
View(metadata)
knitr::opts_chunk$set(echo = TRUE)
library(BiocManager)
library(DESeq2)
counts <- read.csv("airway_scaledcounts.csv", stringsAsFactors = FALSE)
metadata <-  read.csv("airway_metadata.csv", stringsAsFactors = FALSE)
head(counts)
head(metadata)
nrow(counts)
ncol(counts)
nrow(metadata)
control <- metadata[metadata[,"dex"]=="control",]
control <- metadata[metadata[,"dex"]=="control",]
control
counts
counts[,control$id]
control.mean <- rowSums(counts[,control$id])/length(control$id)
names(control.mean) <-counts$ensgene
treated <- metadata[metadata[,"dex"]=="treated",]
treated
treated.mean <- rowSums(counts[,treated$id])/length(treated$id)
names(treated.mean) <-counts$ensgene
meancounts <- data.frame(control.mean, treated.mean)
colSums(meancounts)
plot.default(meancounts)
?plot.default
plot.default(meancounts, log = "xy")
plot.default(meancounts)
plot.default(meancounts, log = "xy")
plot.default(meancounts, log = "xy", ylab = "log Treated", xlab = "log Control")
plot.default(meancounts, log = "yx", ylab = "log Treated", xlab = "log Control")
plot.default(meancounts, log = "xy", ylab = "log Treated", xlab = "log Control")
meancounts$log2fc <- log2(meancounts[,"treated.mean"]/meancounts[,"control.mean"])
head(meancounts)
zero.vals <- which(meancounts[,1:2]==0, arr.ind=TRUE)
to.rm <- unique(zero.vals[,1])
mycounts <- meancounts[ -to.rm,]
head(mycounts)
?which
?unique
down.ind <- mycounts$log2fc < (-2)
down.ind
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
count(up.ind)
count(down.ind)
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
count(up.ind)
count(down.ind)
head(mycounts[up.ind,])
anno <- read.csv("annotables_grch38.csv")
head(anno)
?merge
merge(mycounts, anno, by.x = by.y)
knitr::opts_chunk$set(echo = TRUE)
library(BiocManager)
library(DESeq2)
counts <- read.csv("airway_scaledcounts.csv", stringsAsFactors = FALSE)
metadata <-  read.csv("airway_metadata.csv", stringsAsFactors = FALSE)
head(counts)
head(metadata)
nrow(counts)
ncol(counts)
nrow(metadata)
control <- metadata[metadata[,"dex"]=="control",]
control
control.mean <- rowSums(counts[,control$id])/length(control$id)
names(control.mean) <-counts$ensgene
treated <- metadata[metadata[,"dex"]=="treated",]
treated
treated.mean <- rowSums(counts[,treated$id])/length(treated$id)
names(treated.mean) <-counts$ensgene
meancounts <- data.frame(control.mean, treated.mean)
colSums(meancounts)
plot.default(meancounts)
plot.default(meancounts, log = "xy", ylab = "log Treated", xlab = "log Control")
meancounts$log2fc <- log2(meancounts[,"treated.mean"]/meancounts[,"control.mean"])
head(meancounts)
zero.vals <- which(meancounts[,1:2]==0, arr.ind=TRUE)
to.rm <- unique(zero.vals[,1])
mycounts <- meancounts[ -to.rm,]
head(mycounts)
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
count(up.ind)
count(down.ind)
head(mycounts[up.ind,])
anno <- read.csv("annotables_grch38.csv")
head(anno)
merge(mycounts, anno, by.x = by.y)
merge(mycounts, anno)
#5.) DESeq2 Analysis
library(DESeq2)
#5.) DESeq2 Analysis
library(DESeq2)
knitr::opts_chunk$set(echo = TRUE)
library(DESeq2)
citation("DESeq2")
dds
knitr::opts_chunk$set(echo = TRUE)
library(BiocManager)
library(DESeq2)
counts <- read.csv("airway_scaledcounts.csv", stringsAsFactors = FALSE)
metadata <-  read.csv("airway_metadata.csv", stringsAsFactors = FALSE)
head(counts)
head(metadata)
nrow(counts)
ncol(counts)
nrow(metadata)
control <- metadata[metadata[,"dex"]=="control",]
control
control.mean <- rowSums(counts[,control$id])/length(control$id)
names(control.mean) <-counts$ensgene
treated <- metadata[metadata[,"dex"]=="treated",]
treated
treated.mean <- rowSums(counts[,treated$id])/length(treated$id)
names(treated.mean) <-counts$ensgene
meancounts <- data.frame(control.mean, treated.mean)
colSums(meancounts)
plot.default(meancounts)
plot.default(meancounts, log = "xy", ylab = "log Treated", xlab = "log Control")
meancounts$log2fc <- log2(meancounts[,"treated.mean"]/meancounts[,"control.mean"])
head(meancounts)
zero.vals <- which(meancounts[,1:2]==0, arr.ind=TRUE)
to.rm <- unique(zero.vals[,1])
mycounts <- meancounts[ -to.rm,]
head(mycounts)
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
count(up.ind)
count(down.ind)
head(mycounts[up.ind,])
anno <- read.csv("annotables_grch38.csv")
head(anno)
library(DESeq2)
citation("DESeq2")
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=metadata,
design=~dex,
tidy=TRUE)
dds
res
res <- results(dds)
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=metadata,
design=~dex,
tidy=TRUE)
dds
res <- results(dds)
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=metadata,
design=~dex,
tidy=TRUE)
dds
res <- results(dds)
DESres <- results(dds)
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=metadata,
design=~dex,
tidy=TRUE)
dds
DESres <- results(dds)
knitr::opts_chunk$set(echo = TRUE)
library(BiocManager)
library(DESeq2)
counts <- read.csv("airway_scaledcounts.csv", stringsAsFactors = FALSE)
metadata <-  read.csv("airway_metadata.csv", stringsAsFactors = FALSE)
head(counts)
head(metadata)
nrow(counts)
ncol(counts)
nrow(metadata)
control <- metadata[metadata[,"dex"]=="control",]
control
control.mean <- rowSums(counts[,control$id])/length(control$id)
names(control.mean) <-counts$ensgene
treated <- metadata[metadata[,"dex"]=="treated",]
treated
treated.mean <- rowSums(counts[,treated$id])/length(treated$id)
names(treated.mean) <-counts$ensgene
meancounts <- data.frame(control.mean, treated.mean)
colSums(meancounts)
plot.default(meancounts)
plot.default(meancounts, log = "xy", ylab = "log Treated", xlab = "log Control")
meancounts$log2fc <- log2(meancounts[,"treated.mean"]/meancounts[,"control.mean"])
head(meancounts)
zero.vals <- which(meancounts[,1:2]==0, arr.ind=TRUE)
to.rm <- unique(zero.vals[,1])
mycounts <- meancounts[ -to.rm,]
head(mycounts)
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
count(up.ind)
count(down.ind)
head(mycounts[up.ind,])
anno <- read.csv("annotables_grch38.csv")
head(anno)
library(DESeq2)
citation("DESeq2")
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=metadata,
design=~dex,
tidy=TRUE)
dds
DESres <- results(dds)
knitr::opts_chunk$set(echo = TRUE)
library(BiocManager)
library(DESeq2)
counts <- read.csv("airway_scaledcounts.csv", stringsAsFactors = FALSE)
metadata <-  read.csv("airway_metadata.csv", stringsAsFactors = FALSE)
head(counts)
head(metadata)
nrow(counts)
ncol(counts)
nrow(metadata)
control <- metadata[metadata[,"dex"]=="control",]
control
control.mean <- rowSums(counts[,control$id])/length(control$id)
names(control.mean) <-counts$ensgene
treated <- metadata[metadata[,"dex"]=="treated",]
treated
treated.mean <- rowSums(counts[,treated$id])/length(treated$id)
names(treated.mean) <-counts$ensgene
meancounts <- data.frame(control.mean, treated.mean)
colSums(meancounts)
plot.default(meancounts)
plot.default(meancounts, log = "xy", ylab = "log Treated", xlab = "log Control")
meancounts$log2fc <- log2(meancounts[,"treated.mean"]/meancounts[,"control.mean"])
head(meancounts)
zero.vals <- which(meancounts[,1:2]==0, arr.ind=TRUE)
to.rm <- unique(zero.vals[,1])
mycounts <- meancounts[ -to.rm,]
head(mycounts)
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
count(up.ind)
count(down.ind)
head(mycounts[up.ind,])
anno <- read.csv("annotables_grch38.csv")
head(anno)
library(DESeq2)
citation("DESeq2")
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=metadata,
design=~dex,
tidy=TRUE)
dds
res <- results(dds)
dds <- DESeq2(dds)
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=metadata,
design=~dex,
tidy=TRUE)
dds
dds <- DESeq(dds)
res <- results(dds)
res
summary(res)
plot(res)
plot(dds)
plot( res$log2FoldChange,  -log(res$padj)
plot( res$log2FoldChange,  -log(res$padj),
col=res$sig+1, ylab="-Log(P-value)", xlab="Log2(FoldChange)")
abline(v=c(-2,2), col="gray")
abline(h=log(0.05), col="gray", lty =2)
plot( res$log2FoldChange,  -log(res$padj),
col=res$sig+1, ylab="-Log(P-value)", xlab="Log2(FoldChange)")
abline(v=c(-2,2), col="gray")
abline(h=log(0.05), col="gray", lty =2)
plot(res$log2FoldChange,-log(res$padj),
col=res$sig+1, ylab="-Log(P-value)", xlab="Log2(FoldChange)")
abline(v=c(-2,2), col="gray")
abline(h=log(0.05), col="gray", lty =2)
plot(res$log2FoldChange, -log(res$padj))
abline(v=c(-2,2), col="gray")
abline(h=log(0.05), col="gray", lty =2)
# Add some color
mycols <-
plot(res$log2FoldChange, -log(res$padj))
abline(v=c(-2,2), col="gray")
abline(h=-log(0.05), col="gray", lty =2)
# Add some color
mycols <- rep("gray", nrow(res))
abs(res$log2FoldChange) > 2
#plot(res$log2FoldChange, -log(res$padj), cols=mycols)
#abline(v=c(-2,2), col="gray")
#abline(h=-log(0.05), col="gray", lty =2)
# Add some color
mycols <- rep("gray", nrow(res))
mycols [(res$log2FoldChange) > 2] <- "blue"
plot(res$log2FoldChange, -log(res$padj), cols=mycols)
abline(v=c(-2,2), col="gray")
abline(h=-log(0.05), col="gray", lty =2)
# Add some color
mycols <- rep("gray", nrow(res))
mycols [(res$log2FoldChange) > 2] <- "blue"
plot(res$log2FoldChange, -log(res$padj), col=mycols)
abline(v=c(-2,2), col="gray")
abline(h=-log(0.05), col="gray", lty =2)
# Add some color
mycols <- rep("gray", nrow(res))
mycols [(res$log2FoldChange) > 2] <- "blue"
plot(res$log2FoldChange, -log(res$padj), col=mycols)
abline(v=c(-2,2), col="gray",lty=2)
abline(h=-log(0.05), col="gray", lty =2)
# Add some color
mycols <- rep("gray", nrow(res))
# make points with +2 -2 fild change clue
mycols [(res$log2FoldChange) > 2] <- "blue"
# make points below p-value cutoff red
mycols[ (res$padj > 0.05)] <- "red"
plot(res$log2FoldChange, -log(res$padj), col=mycols)
abline(v=c(-2,2), col="gray",lty=2)
abline(h=-log(0.05), col="gray", lty =2)
# Add some color
mycols <- rep("gray", nrow(res))
# make points with +2 -2 fild change clue
mycols [(res$log2FoldChange) > 2] <- "blue"
mycols [(res$log2FoldChange) < (-2)] <- "blue"
# make points below p-value cutoff red
mycols[ (res$padj > 0.05)] <- "red"
plot(res$log2FoldChange, -log(res$padj), col=mycols)
abline(v=c(-2,2), col="gray",lty=2)
abline(h=-log(0.05), col="gray", lty =2)
write.csv(res, file="expression_results.csv")
library(readr)
expression_results <- read_csv("expression_results.csv")
View(expression_results)
save.image("~/UCSD 2019-2020/BIMM 143/BIMM143_github/class13/class13_environ.RData")
